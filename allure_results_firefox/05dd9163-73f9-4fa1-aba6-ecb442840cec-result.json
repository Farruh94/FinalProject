{"name": "test_logo", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: headless: expected boolean, got string", "trace": "request = <SubRequest 'browser' for <Function test_logo>>\n\n    @pytest.fixture(scope=\"function\")\n    def browser(request) -> Page:\n        headless = request.config.getoption(\"--headless\")\n        print(type(bool(headless)))\n        with sync_playwright() as playwright:\n>           chromium = playwright.chromium.launch(headless=headless)\n\nconftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.11/site-packages/playwright/sync_api/_generated.py:14743: in launch\n    self._sync(\nvenv/lib/python3.11/site-packages/playwright/_impl/_browser_type.py:96: in launch\n    Browser, from_channel(await self._channel.send(\"launch\", params))\nvenv/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\nvenv/lib/python3.11/site-packages/playwright/_impl/_connection.py:482: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x7f01d7344b90>\nmethod = 'launch', params = {'headless': 'True'}, return_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.Error: headless: expected boolean, got string\n\nvenv/lib/python3.11/site-packages/playwright/_impl/_connection.py:97: Error"}, "attachments": [{"name": "stdout", "source": "1a3db269-367b-442b-93bb-8cc033eabf4a-attachment.txt", "type": "text/plain"}], "start": 1699965615001, "stop": 1699965615001, "uuid": "4cb76e27-8065-47cd-830a-ca474017139a", "historyId": "c125ad636e180dfa2af953483927a8f3", "testCaseId": "070e0605c5d4acce7ae68d88013b8d84", "fullName": "tests.test_main_page.TestMainPage#test_logo", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "kamaz-ThinkPad-E15-Gen-2"}, {"name": "thread", "value": "63626-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}