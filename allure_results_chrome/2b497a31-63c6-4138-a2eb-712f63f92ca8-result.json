{"name": "test_not_empty_basket", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: Event loop is closed! Is Playwright already stopped?", "trace": "request = <SubRequest 'browser' for <Function test_not_empty_basket>>\n\n    @pytest.fixture(scope=\"session\")\n    def browser(request) -> Page:\n        headless = request.config.getoption(\"--headless\")\n        if headless == \"True\":\n            headless = True\n        elif headless == \"False\":\n            headless = False\n        with sync_playwright() as playwright:\n            chromium = playwright.chromium.launch(headless=headless)\n            context = chromium.new_context(viewport={\"width\": 1920, \"height\": 1080})\n>       yield context.new_page()\n\nconftest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=/home/kamaz/.cache/ms-playwright/chromium-1076/chrome-linux/chrome> version=116.0.5845.82>>\n\n    def new_page(self) -> \"Page\":\n        \"\"\"BrowserContext.new_page\n    \n        Creates a new page in the browser context.\n    \n        Returns\n        -------\n        Page\n        \"\"\"\n    \n>       return mapping.from_impl(self._sync(self._impl_obj.new_page()))\nE       playwright._impl._api_types.Error: Event loop is closed! Is Playwright already stopped?\n\nvenv/lib/python3.11/site-packages/playwright/sync_api/_generated.py:13060: Error"}, "start": 1699989216981, "stop": 1699989216981, "uuid": "88dd539b-91f6-4e39-ac1f-8b197818fe5c", "historyId": "5eadd623e4a10aeee99f9918de80e421", "testCaseId": "df7cd656354fd7418bdff613ff389404", "fullName": "tests.test_basket.TestBasket#test_not_empty_basket", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_basket"}, {"name": "subSuite", "value": "TestBasket"}, {"name": "host", "value": "kamaz-ThinkPad-E15-Gen-2"}, {"name": "thread", "value": "36503-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_basket"}]}